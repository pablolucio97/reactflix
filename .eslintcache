[{"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\reactflix\\src\\index.js":"1","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\reactflix\\src\\reportWebVitals.js":"2","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\reactflix\\src\\App.js":"3","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\reactflix\\src\\globalStyles.js":"4","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\reactflix\\src\\components\\Movies\\Movie.js":"5","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\reactflix\\src\\components\\Movies\\styles.js":"6","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\reactflix\\src\\components\\Header\\Index.js":"7","C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\reactflix\\src\\components\\Header\\styles.js":"8"},{"size":478,"mtime":1609691862655,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1607165220582,"results":"11","hashOfConfig":"10"},{"size":1475,"mtime":1609922743800,"results":"12","hashOfConfig":"10"},{"size":1428,"mtime":1609922948137,"results":"13","hashOfConfig":"10"},{"size":932,"mtime":1609804023872,"results":"14","hashOfConfig":"10"},{"size":1729,"mtime":1609922601231,"results":"15","hashOfConfig":"10"},{"size":372,"mtime":1609807510384,"results":"16","hashOfConfig":"10"},{"size":1037,"mtime":1609807692021,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1v3epdj",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\reactflix\\src\\index.js",[],["35","36"],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\reactflix\\src\\reportWebVitals.js",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\reactflix\\src\\App.js",["37","38"],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\reactflix\\src\\globalStyles.js",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\reactflix\\src\\components\\Movies\\Movie.js",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\reactflix\\src\\components\\Movies\\styles.js",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\reactflix\\src\\components\\Header\\Index.js",[],"C:\\Users\\Usuario\\Documents\\GitHub\\practices\\react\\reactflix\\src\\components\\Header\\styles.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":3,"column":8,"nodeType":"45","messageId":"46","endLine":3,"endColumn":14},{"ruleId":"47","severity":1,"message":"48","line":14,"column":11,"nodeType":"49","endLine":18,"endColumn":2},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]